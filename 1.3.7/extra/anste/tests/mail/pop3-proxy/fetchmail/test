#!/usr/bin/perl
# Copyright (C) 2009 EBox Technologies S.L.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2, as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

use strict;
use warnings;

my $N_MAILS = $ENV{NMAILS};
my $N_SPAM  = $ENV{NSPAM};
my $N_HAM   = $ENV{NHAM};
my $SERVER  = $ENV{SERVER};
my $USER    = $ENV{USER};
my $PASSWRD = $ENV{PASSWORD};
my $PROTO   = $ENV{PROTO};
defined $PROTO or 
    $PROTO = 'pop3';

my $verbose = 0;

my $fetchmailrc = '/home/ubuntu/.fetchmailrc';
my $fetchmailrcContents = <<"END";
set bouncemail
poll  $SERVER with protocol $PROTO
       user $USER there with password $PASSWRD is ubuntu here
options keep
END

open my $FH, ">$fetchmailrc" or die $!;
print $FH $fetchmailrcContents;
close $FH;

system "chmod 0710 $fetchmailrc";

my $fetchmailCmd = "fetchmail -a $SERVER -f $fetchmailrc --mda '/usr/bin/procmail -d $USER'";
$fetchmailCmd    .= ' -v' if $verbose;

my @fetchmailOutput = `$fetchmailCmd`;
my $fetchmailSuccess = ($! != 0);

print "\nfetchmail output:\n@fetchmailOutput";
if (not $fetchmailSuccess) {
    die "\nfetchmail failed\n";
}


#my $curDir = '/var/mail/' . $USER . '/cur';
my $mbox = '/var/mail/' . $USER;
my $nMails  = `grep 'Message-Id:' $mbox | wc -l`;
chomp $nMails;

my $spamHeader = 'X-Spam: Yes';
my $hamHeader  = 'X-Spam: No';

my $nHam  = `grep '$hamHeader' $mbox | wc -l`;
chomp $nHam;
my $nSpam = `grep '$spamHeader' $mbox | wc -l`;
chomp $nSpam;

print "Mails received: $nMails Ham: $nHam Spam: $nSpam\n";



if ($nMails ne $N_MAILS) {
    die "Failure. $nMails mails were expected\n";
}

if ($nHam ne $N_HAM) {
    die "Failure. $nHam ham messages were expected\n";
}

if ($nSpam ne $N_SPAM) {
    die "Failure. $nSpam spam messages were expected\n";
}


1;
