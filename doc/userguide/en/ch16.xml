<chapter id="ch-openvpn">
  <title>OpenVPN Service</title>
  <section>
    <title>Virtual Private Network service</title>
    <para>
      You can get to Virtual Private Network (VPN) configuration at 
      <menuchoice>
	<guimenu>OpenVPN</guimenu>
      </menuchoice>
      .
    </para>
    <para>
      In order to set up VPN service, you first need to configure a
      Certification Authority. eBox also provides this service so you
      can build it up via
      <menuchoice>
	<guimenu>Certification Authority</guimenu>
      </menuchoice>
      .
    </para>
    <para>
      OpenVPN module can configure eBox as OpenVPN server as well as
      client. As many servers/clients as you want can be
      configured.
    </para>
  </section>
  <section>
    <title>Typical scenarios</title>
    <para>
      Since VPN is a quite complicated service, we provide two typical
      scenarios to deal with eBox.
    </para>
    <section id="sect-roadwarrior">
	<title>Road warrior</title>
	<para>
	  You can set up eBox as a Road Warrior. That is, eBox
	  working as a gateway and an OpenVPN server, which has a local area network (LAN)
	  behind, letting clients connect to eBox in order to access the
	  protected LAN via VPN service. The following image could
	  show a better picture:
	</para>
	<figure>
	  <title>Road warrior scenario</title>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="images/road-warrior.png"
			 format="PNG" />
	    </imageobject>
	  </mediaobject>
	</figure>
	<para>
	  Our objective is to connect client 3 with the other two
	  far away clients (1 and 2) and last two each other.
	</para>
	<para>
	  First, we need to create the Certification Authority and
	  certificates for all elements present in the system. The
	  OpenVPN server and the three clients. Here, this eBox acts
	  as well as Certification Authority.
	</para>
	<note>
	  <para>
	    For information about eBox Certification Authority
	    module, check its own part in the manual.
	  </para>
	</note>
	<para>
	  Once we have the certificates, we should set up the
	  OpenVPN server in eBox at <guilabel>Create new
	  server</guilabel>. We should give it a name, a
	  protocol/port pair, a certificate (which have recently
	  created above) and a subnet to work with. The remainder
	  elements can be set by default values. As we see, the
	  OpenVPN server will be listening on all external
	  interfaces, so we need to set at least one of eBox
	  interfaces as external via
	  <menuchoice>
	    <guimenu>Network</guimenu>
	    <guimenuitem>Interfaces</guimenuitem>
	  </menuchoice>
	  . In our scenario only two interfaces are needed, one
	  interface for the LAN and another external to work in
	  Internet.
	</para>
	<para>
	  After creating the OpenVPN server, we should enable the
	  service and save changes. Then, check out in
	  <guilabel>Status</guilabel> that there is an OpenVPN fully
	  working.
	</para>
	<para>
	  Afterwards, you should add advertised networks, which are
	  those which OpenVPN client will be able to access. In
	  order to achieve so, you need to have these advertised
	  networks reachable. You can set them on editing the chosen
	  OpenVPN server. In our scenario, you should add local
	  network to make visible client 3 to other two clients.
	</para>
	<para>
	  Now it is high time to configure clients. An OpenVPN
	  client can be configured with the following example file:
	</para>
	<example>
	  <title>OpenVPN client configuration example file</title>
	  <programlisting><![CDATA[
client

dev tap
# Under Status page, you can see the interface address and the port
# where OpenVPN is listening to
remote <iface_address> <port>
# Under Status page, you can see the protocol as well
proto <protocol>

####
# All certificates should be download from eBox Certification
# Authority interface and then upload to the client machines.
# Each user certificate created should match with only one machine.
####

# CA certificate
ca <ca_cert_file>
# Client certificate
cert <client_cert_file>
# Client private key
key <client_private_key_file>

# Other options
comp-lzo
nobind
]]>
	  </programlisting>
	</example>
	<para>
	  This example configuration can be passed to OpenVPN daemon
	  with the following command: <command>openvpn --config
	  filename</command>. Now you have access to client 3. To be
	  able to connect client 2, you need to set <guilabel>Allow
	  client-to-client connections</guilabel> checkbox within OpenVPN
	  server configuration. In order to check the configuration
	  is correct, you can see the routing table where advertised
	  networks are added to <literal>tapX</literal> virtual
	  interface.
	</para>
    </section>
    <section id="sect-two-offices">
      <title>Connect two offices with eBox and OpenVPN</title>
      <para>
	This second scenario tries to picture a common use case for
	eBox. Two offices in different networks need to be connected
	through a private network. To do so, we are going to use
	eBox in both local networks as gateways and one as an OpenVPN
	client and another as a server. The following figure tries to
	make clearer the situation:
      </para>
      <figure>
	<title>eBox OpenVPN server vs. eBox OpenVPN client</title>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="images/two-offices.png"
		       format="PNG" />
	  </imageobject>
	</mediaobject>
      </figure>
      <para>
	Our aim is to connect client 1 in LAN 1 with client 2 in LAN 2
	as if they were under the same local network. First, we need
	to set up the OpenVPN server as we do in
	<xref linkend="sect-roadwarrior" />.
      </para>
      <para>
	In order to configure eBox as OpenVPN client, we can do it at
	<guilabel>Create new client</guilabel> button with
	<guimenu>OpenVPN</guimenu> menu. We should set client's
	name, the OpenVPN server address and protocol/port pair and
	the corresponding certificates. You can obtain this
	information analogously to the one shown above. When you save
	changes, in status summary, you can see the new eBox OpenVPN
	daemon in LAN 2 running as a client with the connection target to the
	other eBox within LAN 1.
      </para>
    </section>
  </section>
</chapter>