#!/usr/bin/perl
use strict;
use warnings;

use Data::Dumper;

use EBox::Global;
use EBox::EBackup;
use EBox::Event;
use EBox::Config;
use EBox::Sudo;

use constant EVENTS_FIFO => EBox::Config::tmp() . 'events-fifo';

EBox::init();

my $ebackup = EBox::Global->getInstance(1)->modInstance('ebackup');
if (not $ebackup->isEnabled() ) {
    print "Backup module is disabled\n";
    exit 0;

}

my $model = $ebackup->model('Local');
if (not $model->backupEnableValue()) {
    print "local backup not enabled\n";
    exit 0;
}


my $watcherActive = 0;

my $global = EBox::Global->getInstance(1);
if ($global->modExists('events')) {
    my $events = $global->modInstance('events');
    if ((defined $events)  and ($events->isRunning())) {
        $watcherActive = 
            $events->isEnabledWatcher('EBox::Event::Watcher::EBackup')->value();
    }

}



my $path = $model->backupPathValue();
my $keep = $model->backupKeepValue();
my $backupCmd = "/usr/share/ebox-ebackup/ebox-ebackup-local $path $keep";
EBox::Sudo::root($backupCmd);

if ($? != 0) {
    if ($watcherActive) {
        my $event = new EBox::Event(
                message => 'eBox backup failed.',
                source => 'EBackup',
                level => 'error',
               );
        
        open(my $fifo, '+<', EVENTS_FIFO) or die;
        print $fifo Dumper($event);
        close($fifo);
        
    }
    
    
        die 'eBox backup failed';
}

1;
