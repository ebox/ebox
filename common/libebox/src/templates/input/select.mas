<%doc>
  Component for HTML select input

   Parameters:
       $name  - name of the input
       $value - value of the input
       @options - this list contains all the available select's
  options. Each option is represented a hash reference with this
  keys:
        value          - the value of the option
        printableValue - the string who represent the value in the
  GUI. Defaults to value

   @extraParams - for compability with other input templates. You can
   pass the options here (with a 'options' key) but the @options
   parameter has precedence.
  
</%doc>
<%args>
$name
$value       => ''
@extraParams => ()
@options => ();
</%args>
<%init>
my %params = @extraParams; # temporal variable to ease extraParams manipulation

# extract options from extraParams if needed
my $optionsInExtraParameters_r = delete $params{options};
if (@options == 0) {
   if (defined $optionsInExtraParameters_r ) {
       @options = @{ $optionsInExtraParameters_r };
   }
}
# disable the control if it isn't any option
if (@options == 0) {
  $params{disabled} = 'disabled';
}

@extraParams  = %params;

</%init>
<select name="<% $name %>" <& /htmlAttributes.mas, @extraParams &>  >
% foreach my $option (@options) {
%  my $optionValue = $option->{value};
%  $option->{selected} = ($value eq $optionValue) ? 1 : 0;
%  my @optionParams = %{ $option  };
 <& .option, @optionParams &>
% }
</select>


<%def .option>
<%args>
$value
$selected => 0
$printableValue => undef
</%args>
<%init>
if (!defined $printableValue) {
   $printableValue = $value;
}
my $selectedAttr = $selected ? 'selected' : '';
</%init>
<option value="<% $value | h %>" <% $selectedAttr | h %> >
<% $printableValue %>
</option>
</%def>

