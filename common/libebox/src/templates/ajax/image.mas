<%doc>
  This template is indicated to view the EBox::Model::Image. 

  The original overridden call at /ajax/modelViewer.mas
</%doc>
<%flags>
  inherit =>  '/ajax/tableBody.mas'   #  '/ajax/modelViewer.mas'
</%flags>
<%args>
  $model
  $hasChanged
  $action => 'view'
</%args>

<%init>
  use EBox::Gettext;
  use EBox::Model::DataTable;
  use EBox::CGI::Temp;

</%init>



<& SELF:view,
   model => $model,
   hasChanged => $hasChanged,
   action => $action,
&>



<%doc>
% # Anyway you should call the change menu sub-component to check if
% # any change has been done
<& SELF:changeMenu,
   hasChanged => $hasChanged
&>
</%doc>

<%method _body>
<%args>
  $model
</%args>
<%init>
my $modelName = $model->name;
my $activePrefix = $modelName . 'Active';
my $hiddenPrefix =  $modelName . 'Hidden';

my $stackDeep = 2;
my %childArgs = $m->caller_args($stackDeep);

my $action = exists $childArgs{action} ? $childArgs{action} : 'view';
my $reloadAction = $action eq 'changeList';

my $msg = exists $childArgs{action} ? 'EXISTE' : 'NOEXISTE';
</%init>




% if (not $reloadAction) {
<& SELF:refreshJS, model => $model, hiddenPrefix => $hiddenPrefix &>

% if ( $model->printableName() ) {
<& PARENT:title,
   title => $model->printableName()
&>
% }

<& SELF:activeImg, model => $model, prefix => $activePrefix &>

% }



<& SELF:hiddenImg, model => $model, prefix => $hiddenPrefix, activePrefix =>
$activePrefix, reloadAction => $reloadAction &>


</%method>


<%method activeImg>
<%args>
  $prefix
  $model
</%args>
<%init>
  my $imgId = $prefix . 'Img';
  my $divId = $prefix . 'Div';

  my $imgUri = $model->image;
  my $alt    = $model->imageAlt;

</%init>
<div id='<% $divId %>' >
<img <& /htmlAttributes.mas, src =>  $imgUri, alt => $alt, id => $imgId &> />
</div>
</%method>

<%method hiddenImg>
<%args>
  $prefix
  $model
  $activePrefix
  $reloadAction
</%args>
<%init>
  my $imgId = $prefix . 'Img';
  my $divId = $prefix . 'Div';

  my $activeImgId = $activePrefix . 'Img';
  my $activeDivId = $activePrefix . 'Div';

  my $imgUri = $model->image;
  my $alt    = $model->imageAlt;

  my $onLoadCall = qq{switchImg("$prefix", "$activePrefix")};
</%init>
% if (not $reloadAction) {
%# <div class='hidden' id='<% $divId %>' >
<div  id='<% $divId %>' >
% }

<img <& /htmlAttributes.mas, 
      id  =>  $imgId,
      src =>  $imgUri, 
      alt => $alt, 
      onload => $onLoadCall,
     &> 
/>

% if (not $reloadAction) {
</div>
%} 
</%method>

<%method refreshJS>
<%args>
$model
$hiddenPrefix
</%args>
<%init>
my $hiddenDiv = $hiddenPrefix . 'Div';

my $refreshInterval = 3;

my $table = $model->table();
my $refreshFunction =   q{function(pe) } . ' { ' .
                            q{reloadGraph(} .
                            q{'} .  $table->{'actions'}->{'changeView'} . q{', } .
			    q{'}. $hiddenDiv . q{', } .
			    q{'} . $table->{tableName} . q{',} .
			    q{'} . $table->{'gconfdir'} . q{', } .
                            q{'changeList'}.
                            q{)} .
                      '}';
                        
   
            

my $pe = $model->name . 'Pe';
</%init>
<script type="text/javascript">

var <% $pe %>;
<% $pe %> = new PeriodicalExecuter(<% $refreshFunction %>, <% $refreshInterval %>);

</script>
</%method>


<%method headerScriptSection>

<& PARENT:headerScriptSection &>

<script type="text/javascript">

function reloadGraph(url, target, tableName, directory, action)
{


	var pars = 'action=' + action + '&tablename=' + target + '&directory=' + directory; //+ '&editid=' + id;

        cleanError(tableName);
	
	var MyAjax = new Ajax.Updater(
		{
			success: target,
			failure: target,
		},
		url,
		{
			method: 'post',
			parameters: pars,
			asyncrhonous: false,
			evalScripts: true,
			onComplete: function(t) { 
			  stripe('dataTable', '#ecf5da', '#ffffff');

			},
		});

}

function switchImg(hiddenPrefix, activePrefix)
{
     var hiddenImgId = hiddenPrefix + 'Img';
     var hiddenDivId = hiddenPrefix + 'Div';
     var activeImgId = activePrefix + 'Img';
     var activeDivId = activePrefix + 'Div';

     var oldHiddenImg = document.getElementById(hiddenImgId);
     var oldHiddenDiv = document.getElementById(hiddenDivId);
     var oldActiveImg = document.getElementById(activeImgId);
     var oldActiveDiv = document.getElementById(activeDivId);

     oldHiddenImg.id = activeImgId;
     oldHiddenDiv.id = activeDivId;   
     oldActiveImg.id = hiddenImgId;
     oldActiveDiv.id = hiddenDivId;   

     var divTop = oldActiveDiv.style.top;
     var imgTop = oldActiveDiv.style.top;

     Element.setStyle( oldActiveDiv, {  'z-index': 0, position: 'absolute'});
     Element.setStyle( oldHiddenDiv, {  'z-index': 1, position: 'absolute', });
     Element.setStyle( oldActiveImg, {  'z-index': 0, position: 'absolute'});
     Element.setStyle( oldHiddenImg, {  'z-index': 1, position: 'absolute'});

     hiddenImgOnload = oldHiddenDiv.onload;
     oldHiddenDiv.onload = '';
     oldActiveDiv = hiddenImgOnload;
}
</script>

</%method>

<%method editForm>
$m->abort('images cannot be edited');
</%method>

<%method editRowFields>
$m->abort('images cannot be edited');
</%method>


