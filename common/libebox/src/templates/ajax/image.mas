<%doc>
  This template is indicated to view the EBox::Model::Image. 

  The original overridden call at /ajax/modelViewer.mas
</%doc>
<%flags>
  inherit =>  '/ajax/tableBody.mas'   #  '/ajax/modelViewer.mas'
</%flags>
<%args>
  $model
  $hasChanged
  $action => 'view'
</%args>

<%init>
  use EBox::Gettext;
  use EBox::Model::DataTable;
  use EBox::CGI::Temp;

</%init>
<& SELF:view,
   model => $model,
   hasChanged => $hasChanged,
   action => $action,
&>
<%doc>
% # Anyway you should call the change menu sub-component to check if
% # any change has been done
<& SELF:changeMenu,
   hasChanged => $hasChanged
&>
</%doc>

<%method _body>
<%args>
  $model
</%args>
<%init>
my $modelName = $model->name();
my $activePrefix = $modelName . 'Active';
my $hiddenPrefix =  $modelName . 'Hidden';

my $stackDeep = 2;
my %childArgs = $m->caller_args($stackDeep);

my $action = exists $childArgs{action} ? $childArgs{action} : 'view';
my $reloadAction = $action eq 'changeList';
</%init>
% if (not $reloadAction) {
<& SELF:refreshJS, model => $model, hiddenPrefix => $hiddenPrefix &>

%    if ( $model->printableName() ) {
<& PARENT:title,
   title => $model->printableName()
&>
%    }

<& SELF:activeImg, model => $model, prefix => $activePrefix &>

% }

<& SELF:hiddenImg, model => $model, prefix => $hiddenPrefix,
  activePrefix => $activePrefix, reloadAction => $reloadAction
&>

</%method>


<%method activeImg>
<%args>
  $prefix
  $model
</%args>
<%init>
  my $imgId = $prefix . 'Img';
  my $divId = $prefix . 'Div';

  my $img_r = $model->image();
</%init>
<div id='<% $divId %>' >
<& SELF:.img,  imgId => $imgId, img_r => $img_r &>
</div>
</%method>

<%method hiddenImg>
<%args>
  $prefix
  $model
  $activePrefix
  $reloadAction
</%args>
<%init>
  my $imgId = $prefix . 'Img';
  my $divId = $prefix . 'Div';

  my $activeImgId = $activePrefix . 'Img';
  my $activeDivId = $activePrefix . 'Div';

  my $img_r = $model->image();

  my $onLoadCall = qq{switchImg("$prefix", "$activePrefix")};
</%init>
% if (not $reloadAction) {
<div  id='<% $divId %>' >
% }
<& SELF:.img,
             imgId => $imgId,
             img_r => $img_r,
             onLoad => $onLoadCall,
	     showError => 0,
&>

% if (not $reloadAction) {
</div>
%}
</%method>

<%method .img>
<%args>
$imgId
$img_r
$onLoad => undef
$showError => 1
</%args>
<%init>
my @imgAttrs;
if (exists $img_r->{url} ) {
  @imgAttrs = (
	 src => $img_r->{url},
	 alt => $img_r->{alt},
         id  => $imgId ,
  );
 if (defined $onLoad) {
       push @imgAttrs, (onLoad => $onLoad);
 }
}
</%init>
% if (exists $img_r->{url} ) {
<img <& /htmlAttributes.mas,  @imgAttrs &> />
% }
% elsif ($showError) {  # no image to display, showing the text message
<p id="<% $imgId %>"><strong><% $img_r->{error} %></strong></p>
% }

</%method>

<%method refreshJS>
<%args>
$model
$hiddenPrefix
</%args>
<%init>
my $hiddenDiv = $hiddenPrefix . 'Div';

my $refreshInterval = 3;

my $table = $model->table();
my $refreshFunction =   q{function(pe) } . ' { ' .
                            q{reloadGraph(} .
                            q{'} .  $table->{'actions'}->{'changeView'} . q{', } .
			    q{'}. $hiddenDiv . q{', } .
			    q{'} . $table->{tableName} . q{',} .
			    q{'} . $table->{'gconfdir'} . q{', } .
                            q{'changeList'}.
                            q{)} .
                      '}';
                        
   
            

my $pe = $model->name . 'Pe';
</%init>
<script type="text/javascript">

var <% $pe %>;
<% $pe %> = new PeriodicalExecuter(<% $refreshFunction %>, <% $refreshInterval %>);

</script>
</%method>


<%method headerScriptSection>

<& PARENT:headerScriptSection &>

<script type="text/javascript" src="/data/js/image-helper.js">
//
</script>

</%method>

<%method editForm>
$m->abort('images cannot be edited');
</%method>

<%method editRowFields>
$m->abort('images cannot be edited');
</%method>


