#! /bin/sh /usr/share/dpatch/dpatch-run
## 06_reduce_rss_items.dpatch by Javier Uruen Val <javi@warp.es>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Patch to backport 0.11.100 fix to reduce the maximum number of RSS 
## DP: entries to 500

@DPATCH@

Index: ebox/src/EBox/Event/Dispatcher/RSS.pm
===================================================================
--- ebox/src/EBox/Event/Dispatcher/RSS.pm   (revisiÃ³n: 9763)
+++ ebox/src/EBox/Event/Dispatcher/RSS.pm   (copia de trabajo)
@@ -53,8 +53,10 @@
     RSS_FILE => EBox::Config::dynamicRSS() . 'alerts.rss',
     RSS_LOCK_FILE => EBox::Config::tmp() . 'alerts.rss.lock',
     CHANNEL_TTL => 5,
+    MAX_RSS_ITEMS => 500
 };
 
+
 # Class data
 our $LockFH;
 
@@ -272,7 +274,20 @@
     $self->LockRSSFile(1);
 
     my $rssComplaintDate = $self->_currentDate();
-    unless ( -r RSS_FILE ) {
+	my $create = undef;
+	
+    if ( not -r RSS_FILE ) {
+        $create = 1;
+    } else {
+        eval '$rss->parsefile(RSS_FILE)';
+        if ($@) {
+            unlink(RSS_FILE);
+            $create = 1;
+            $rss = new XML::RSS(version => '2.0');
+        }
+    }
+	
+    if ($create) {
         # Create the channel if it does not exist
         $rss->channel(title         => __x('eBox alerts channel for {hostname}',
                                          hostname => hostname()),
@@ -290,13 +305,13 @@
                     description => 'eBox platform',
                     alt         => 'eBox platform',
                    );
-    } else {
-        $rss->parsefile(RSS_FILE);
+
     }
     # Update the lastBuildDate and pubDate
     $rss->channel(pubDate       => $rssComplaintDate,
                   lastBuildDate => $rssComplaintDate
                  );
+
     my $descriptionStr = __x('The event has happened in eBox {hostname} '
                              . 'from {source}',
                              hostname => hostname(),
@@ -312,6 +327,12 @@
                    guid        => $event->source() . '-' . $event->timestamp(),
                   );
 
+    # Remove entries to MAX_RSS_ITEMS
+    my $length = $rss->{'num_items'};
+    if ($length > MAX_RSS_ITEMS) {
+        splice(@{$rss->{'items'}}, - MAX_RSS_ITEMS, ($length - MAX_RSS_ITEMS));
+    }
+
     $rss->save(RSS_FILE);
 
     $self->UnlockRSSFile();
