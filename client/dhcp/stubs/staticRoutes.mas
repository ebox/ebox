<%args>
@routes 
$defaultGw => undef
</%args>
<%init>
use EBox::NetWrappers;
</%init>
<& .msStaticRoutes, routes => \@routes &>
<& .rfc3442StaticRoutes, routes => \@routes, defaultGw => $defaultGw &>
<%def .msStaticRoutes>
<%args>
@routes 
</%args>
option ms-classless-static-routes
% while (my $r = pop @routes) {
%   my $last =  @routes == 0;
   <& .route, destination => $r->{network},   gateway => $r->{gateway}, netmask => $r->{netmask}, last => $last &>
% }
</%def>

<%def .rfc3442StaticRoutes>
<%args>
$defaultGw
@routes 
</%args>
option rfc3442-classless-static-routes
% foreach my $r (@routes) {
   <& .route, destination => $r->{network}, gateway => $r->{gateway}, netmask => $r->{netmask} &>
% }
   <& .route, destination => 'default', gateway => $defaultGw, last => 1&>  
</%def>
<%def .route>
<%args>
$destination
$gateway
$netmask => undef
$last    => 0
</%args>
<%init>
my $route = '';


if ($destination eq 'default')  {
    # netmask and destination portion
    $route .= '0,';
}
else {
   # netmask portion
   $route .= EBox::NetWrappers::bits_from_mask( $netmask );
   $route .= ',';

   # destination portion
     $destination =~ s/(\.0)+$//;
     $destination =~ tr/\./,/;
     $destination .= ',' unless $destination =~ m/,$/;
     $route .= $destination ;
}

# gateway portion
$gateway =~ tr/\./,/;
$route .= $gateway;

# add comma or semicolomn depending wether this is the last route or not
if ($last) {
   $route .= ';';
}
else {
   $route .= ',';
}
</%init>
<% $route %>
</%def>