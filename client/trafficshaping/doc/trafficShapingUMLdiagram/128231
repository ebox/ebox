format 27
"TrafficShaping" // TrafficShaping
  // class settings
  default_attribute_visibility protected default_relation_visibility protected default_operation_visibility public
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default shadow default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default shadow default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default drawing_language default shadow default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default shadow default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default shadow default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default shadow default
  show_activities default region_horizontally default drawing_language default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default shadow default
  show_infonote default drawing_language default
  
  comment "The TrafficShaping eBox module"
  classview 128231 "TrafficShaping"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default shadow default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default shadow default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default shadow default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default drawing_language default shadow default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default shadow default
    show_activities default region_horizontally default drawing_language default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default shadow default
    show_infonote default drawing_language default
    
    classdiagram 128231 "Diagram4"
      draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default shadow default
      size A3
    end

    class 128231 "TrafficShaping"cpp_decl ""
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      associated_diagram classdiagram_ref 128231 // Diagram4
      comment "Traffic Shaping main Module.

EBox::TrafficShaping

It acts as a director in Builder Pattern"
      classrelation 128359 // <dependency>
	relation 128359 -_->
	  a protected
	    classrelation_ref 128359 // <dependency>
	  b parent class_ref 128487 // Network
      end

      classrelation 128487 // <generalisation>
	relation 128487 ---|>
	  a public
	    classrelation_ref 128487 // <generalisation>
	  b parent class_ref 128615 // GConfModule
      end

      classrelation 128999 // <realization>
	relation 128999 -_-|>
	  a public
	    classrelation_ref 128999 // <realization>
	  b parent class_ref 128871 // NetworkObserver
      end

      classrelation 128094 // <aggregation>
	relation 128094 o---
	  a role_name "" multiplicity "" protected
	    classrelation_ref 128094 // <aggregation>
	  b role_name "" multiplicity "" protected
	    classrelation_ref 128222 // <aggregation>
      end

      classrelation 128350 // <directional aggregation>
	relation 128222 o-->
	  a role_name "" multiplicity "1" protected
	    classrelation_ref 128350 // <directional aggregation>
	  b parent class_ref 128094 // TreeBuilder::Abstract
      end

      classrelation 128322 // <unidirectional association>
	relation 128194 --->
	  a role_name "" multiplicity "" protected
	    classrelation_ref 128322 // <unidirectional association>
	  b parent class_ref 128217 // TC
      end

      operation 128104 "addRule"
	public explicit_return_type ""
	nparams 7
	  param in name "interface" explicit_type "string"
	  param in name "port" explicit_type "int"
	  param in name "protocol" explicit_type "string"
	  param in name "guaranteedRate" explicit_type "int"
	  param in name "limitedRate" explicit_type "int"
	  param in name "priority" explicit_type "long"
	  param in name "enabled" explicit_type "bool"
	nexceptions 3
	  explicit_exception ""
	  explicit_exception ""
	  explicit_exception ""
	
	
	
	comment "Add a custom rule given some parameters"
      end

      operation 128232 "removeRule"
	public explicit_return_type ""
	nparams 6
	  param in name "interface" explicit_type "string"
	  param in name "ruleId" explicit_type "string"
	  param in name "protocol" explicit_type "string"
	    defaultvalue "undef"
	  param in name "port" explicit_type "int"
	    defaultvalue "undef"
	  param in name "guaranteedRate" explicit_type "int"
	    defaultvalue "undef"
	  param in name "limitedRate" explicit_type "int"
	    defaultvalue "undef"
	nexceptions 3
	  explicit_exception ""
	  explicit_exception ""
	  explicit_exception "EBox::Exceptions::DataNotFound"
	
	
	
	comment "Remove a custom rule given the interface attached and the unique identifier for the rule"
      end

      operation 128360 "enableRule"
	public explicit_return_type ""
	nparams 3
	  param in name "interface" explicit_type "string"
	  param in name "ruleId" explicit_type "string"
	  param in name "enabled" explicit_type "bool"
	
	
	
	comment "Set a rule as enabled/disabled"
      end

      operation 128488 "updateRule"
	public explicit_return_type ""
	nparams 7
	  param in name "interface" explicit_type "string"
	  param in name "ruleId" explicit_type "string"
	  param in name "priority" explicit_type "int"
	    defaultvalue "undef"
	  param in name "" explicit_type ""
	  param in name "" explicit_type ""
	  param inout name "" explicit_type ""
	  param inout name "" explicit_type ""
	
	
	
	comment "Update any component rule except enable/disable"
      end

      operation 128616 "listRules"
	public explicit_return_type "array ref"
	nparams 1
	  param in name "interface" explicit_type "string"
	
	
	
	comment "Send a list with all the rules within an interface. 

The return value is an array ref containing hash references which have the following attributes:
         - protocol        - inet protocol
         - port            - port number
         - guaranteed_rate - maximum guaranteed rate
         - limited_rate    - maximum traffic rate
         - priority        - priority (lower number, highest priority)
         - enabled         - is this rule enabled?
         - ruleId          - unique identifier for this rule"
      end

      operation 128744 "getLowestPriority"
	public explicit_return_type "int"
	nparams 2
	  param in name "interface" explicit_type "string"
	  param in name "search" explicit_type "bool"
	
	
	
	comment "Accessor to the lowest priority rule for an interface. If none
is found, the lowest priority is zero."
      end

      operation 128872 "setLowestPriority"
	public explicit_return_type ""
	nparams 2
	  param in name "interface" explicit_type "string"
	  param in name "priority" explicit_type "int"
	
	
	
	comment "Mutator to the lowest priority attached to an interface."
      end

      operation 128333 "checkRule"
	public explicit_return_type "bool"
	nparams 6
	  param in name "interface" explicit_type "string"
	  param in name "protocol" explicit_type "string"
	  param in name "port" explicit_type "int"
	  param in name "guaranteedRate" explicit_type "int"
	  param in name "limitedRate" explicit_type "int"
	  param in name "ruleId" explicit_type "int"
	    defaultvalue "undef"
	nexceptions 3
	  explicit_exception ""
	  explicit_exception ""
	  explicit_exception ""
	
	
	
      end
    end

    class 128487 "Network"cpp_decl ""
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Network eBox module

EBox::Network"
    end

    class 128615 "GConfModule"cpp_decl ""
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 128871 "NetworkObserver"
      abstract 
      cpp_decl ""
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 129127 "staticIfaceAddressChanged"
	public explicit_return_type ""
	nparams 6
	  param in name "iface" explicit_type "string"
	  param in name "oldaddr" explicit_type "string"
	  param in name "oldmask" explicit_type "string"
	  param in name "newaddr" explicit_type "string"
	  param in name "newmask" explicit_type "string"
	  param out name "returnValue" explicit_type "bool"
	    defaultvalue "false"
	
	
	
	comment "Invoked when the address of an static network interface is going to be changed, this method receives the old and new addresses and masks as arguments. Returning a true value means that this module's configuration would become inconsistent if such a change was made. In that case the network module will not make the change, 
#	but warn the user instead. You should override this method if you need
#	to."
      end

      operation 129255 "ifaceMethodChanged"
	public explicit_return_type ""
	nparams 4
	  param in name "iface" explicit_type "string"
	  param in name "oldmethod" explicit_type "string"
	  param in name "newmethod" explicit_type "string"
	  param out name "returnValue" explicit_type "bool"
	    defaultvalue "false"
	
	
	
	comment "# 	Invoked when the configuration method for a network interface is 
#	going to change. Both the old and new methods are passed as 
#	arguments to this function. They are strings: static, dhcp,
#	trunk or notset. As with the previous function, a return value of 
#	true will prevent the change from being made. You should override this
#	method if you need to.
"
      end

      operation 129383 "vifaceDelete"
	public explicit_return_type ""
	nparams 4
	  param in name "iface" explicit_type "string"
	  param in name "viface" explicit_type "string"
	  param in name "newmethod" explicit_type "string"
	  param out name "returnValue" explicit_type "bool"
	    defaultvalue "false"
	
	
	
	comment "#	Invoked when a  virtual interface is going to be removed. Its 
#	arguments are the real interface  which it's going to be removed from, 
#	the name of the  interface to remove, its ip address and its netmask. It
#	works the same way: return true if the removal of the virtual 
#	interface is incompatible with your module's current configuration."
      end

      operation 129511 "vifaceAdded"
	public explicit_return_type ""
	nparams 4
	  param in name "iface" explicit_type "string"
	  param in name "viface" explicit_type "string"
	  param in name "newmethod" explicit_type "string"
	  param out name "returnValue" explicit_type "bool"
	    defaultvalue "false"
	
	
	
	comment "#	Invoked when a new virtual interface is going to be created. Its 
#	arguments are the real interface to which it's going to be added, 
#	the name of the new interface, its ip address and its netmask. It
#	works the same way: return true if the creation of the virtual 
#	interface is incompatible with your module's current configuration."
      end

      operation 129639 "freeIface"
	public explicit_return_type ""
	nparams 2
	  param in name "iface" explicit_type "string"
	  param out name "returnValue" explicit_type "bool"
	    defaultvalue "false"
	
	
	
	comment "#	Invoked when a interface is going to be removed. Its argument 
#	is the name of the real interface. It works exactly 
#	the same way as the three methods above.
"
      end

      operation 129767 "freeViface"
	public explicit_return_type ""
	nparams 3
	  param in name "iface" explicit_type "string"
	  param in name "viface" explicit_type "string"
	  param out name "returnValue" explicit_type "bool"
	    defaultvalue "false"
	
	
	
	comment "#	Invoked when a virtual interface is going to be removed. Its arguments 
#	are the names of the real and virtual interfaces. It works exactly 
#	the same way as the three methods above."
      end

      operation 128077 "ifaceExternalChanged"
	public explicit_return_type "bool"
	nparams 1
	  param in name "iface" explicit_type "string"
	
	
	
	comment "Invoked when a iface is going to change from external to
internal and viceversa. Its argument is the name of the real
interface. As with the previous function, a return value of
true will prevent the change from being made. You should override this
method if you need to."
      end

      operation 128205 "changeIfaceExternalProperty"
	public explicit_return_type ""
	nparams 2
	  param in name "iface" explicit_type "string"
	  param in name "external" explicit_type "bool"
	
	
	
	comment "Invoked when an interface is going to change from external to
internal. Its argument is the name of the real interface. It
works exactly the same way as two methods above."
      end
    end

    class 128999 "Node"
      abstract 
      cpp_decl ""
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An abstract node which comprises rules' tree

EBox::TrafficShaping::NodeTS

The product in a Builder pattern"
      attribute 128345 "identifier"
	protected explicit_type "Hash"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "	A hash containing the following attributes:

 * major : the major number
 * minor : the minor number, always 0 for qdisc"
      end

      operation 128044 "dumpTcCommands"
	public explicit_return_type "array ref"
	nparams 0
	
	
	
	comment "Dump all tc commands needed to create the node in the Linux TC structure"
      end

      classrelation 128172 // (discipline)
	relation 128172 o--> name "discipline"
	  a role_name "" multiplicity "" protected
	    classrelation_ref 128172 // (discipline)
	  b parent class_ref 128478 // QueueDiscipline::Abstract
      end

      operation 129896 "getIdentifier"
	public explicit_return_type "Hash ref"
	nparams 0
	
	
	
	comment "Get the identifier for a node in tc structure.

Returns a hash ref containing the following attributes
                  - major - the major number
                  - minor - the minor number"
      end
    end

    class 129127 "QDisc::Root"cpp_decl ""
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 128217 // <generalisation>
	relation 128217 ---|>
	  a public
	    classrelation_ref 128217 // <generalisation>
	  b parent class_ref 128089 // QDisc::Base
      end

      attribute 128231 "interface"
	protected explicit_type "string"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "Explained in EBox::Network, but it seems a string containing the interface name"
      end

      operation 130920 "new"
	public return_type class_ref 129127 // QDisc::Root
	nparams 4
	  param in name "interface" explicit_type "string"
	  param in name "majorNumber" explicit_type "int"
	  param in name "filters_ref" explicit_type "array ref of FwFilters"
	    defaultvalue "undef"
	  param in name "realQDisc" type class_ref 128478 // QueueDiscipline::Abstract
	    defaultvalue "undef"
	
	
	
	comment "Constructor for RootQDisc class. A root queue discipline attached to an interface."
      end

      operation 131048 "getInterface"
	public explicit_return_type "string"
	nparams 0
	
	
	
	comment "Get the interface where the qdisc is attached"
      end
    end

    class 129511 "Class"cpp_decl ""
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 132327 // (parent)
	relation 132199 ---> name "parent"
	  a role_name "" multiplicity "1" protected
	    classrelation_ref 132327 // (parent)
	  b parent class_ref 128999 // Node
      end

      classrelation 128684 // <realization>
	relation 128556 -_-|>
	  a public
	    classrelation_ref 128684 // <realization>
	  b parent class_ref 128999 // Node
      end

      classrelation 128812 // (childrenClasses)
	relation 128684 ---> name "childrenClasses"
	  a role_name "" multiplicity "*" protected
	    comment "There are children classes only if no qdisc is attached"
	    classrelation_ref 128812 // (childrenClasses)
	  b parent class_ref 129511 // Class
      end

      classrelation 129068 // 
	relation_ref 128300 // 
      end

      operation 130024 "new"
	public return_type class_ref 129511 // Class
	nparams 4
	  param in name "minorNumber" explicit_type "int"
	  param in name "qdiscAttached" type class_ref 128089 // QDisc::Base
	  param in name "parent" explicit_type "Tree"
	  param in name "queueDiscipline" type class_ref 128478 // QueueDiscipline::Abstract
	
	
	
	comment "Constructor for ClassTS class. A tc class in a classful qdisc discipline. It must contain classful classes or a qdisc."
      end

      operation 130152 "getAttachedQDisc"
	public return_type class_ref 128089 // QDisc::Base
	nparams 0
	
	
	
	comment "Accessor to the attached qdisc"
      end

      operation 130280 "getAssociatedQueueDiscipline"
	public return_type class_ref 128478 // QueueDiscipline::Abstract
	nparams 0
	
	
	
	comment "Acessor to the associated queue discipline"
      end

      operation 130408 "equals"
	public explicit_return_type "bool"
	nparams 1
	  param in name "object" explicit_type "Object"
	
	
	
	comment "Check equality between an object and this"
      end
    end

    class 129895 "Filter::Fw"cpp_decl ""
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "It should extendable to all kinds of filter but we use iptables filter. So it will be a fw filter."
      attribute 128008 "flowId"
	protected explicit_type "Hash"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "A hash containing the following entries:
* roothandle : handle from root qdisc
* classid    : class id"
      end

      attribute 128473 "prio"
	protected explicit_type "int"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "Filter priority. If several filters are attached to the same qdisc, they're asked in priority sections. Lower number, higher priority."
      end

      attribute 128601 "protocol"
	protected explicit_type "string"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "In particular, i'm gonna use only ip protocol for now."
      end

      attribute 128729 "mark"
	protected explicit_type "int"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "Mark used in packet to do filtering afterwards"
      end

      operation 131176 "new"
	public return_type class_ref 129895 // Filter::Fw
	nparams 7
	  param in name "flowId" explicit_type "Hash ref"
	  param in name "mark" explicit_type "int"
	  param in name "parent" type class_ref 128089 // QDisc::Base
	  param in name "protocol" explicit_type "string"
	    defaultvalue "undef"
	  param in name "prio" explicit_type "int"
	    defaultvalue "undef"
	  param in name "fProtocol" explicit_type "string"
	    defaultvalue "undef"
	  param in name "fPort" explicit_type "int"
	    defaultvalue "undef"
	
	
	
	comment "Constructor for FwFilter class. It should extendable to all kinds of filter but we use iptables filter. So it will be a fw filter."
      end

      operation 128834 "equals"
	public explicit_return_type "bool"
	nparams 2
	  param in name "object" type class_ref 129895 // Filter::Fw
	  param out name "" explicit_type ""
	
	
	
	comment "Check equality between an object and this"
      end

      classrelation 129196 // <association>
	relation_ref 128345 // <association>
      end

      operation 131304 "getIdentifier"
	public explicit_return_type "int"
	nparams 0
	
	
	
	comment "Accessor to the filter identifier"
      end

      operation 131432 "dumpTcCommand"
	public explicit_return_type "string"
	nparams 0
	
	
	
	comment "Dump tc command needed to run to make the filter ready in tc.

It returns only the arguments."
      end

      operation 131560 "dumpIptablesCommands"
	public explicit_return_type "Array ref"
	nparams 0
	
	
	
	comment "Dump iptables commands needed to run to make the filter ready in iptables.

It returns an array ref containing the iptables arguments to execute"
      end
    end

    class 130151 "QueueDiscipline::SFQ"cpp_decl ""
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 129118 // <generalisation>
	relation 128862 ---|>
	  a public
	    classrelation_ref 129118 // <generalisation>
	  b parent class_ref 128478 // QueueDiscipline::Abstract
      end

      attribute 128350 "pertub"
	protected explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "Periodicity in seconds of hash function alteration"
      end

      attribute 128264 "quantum"
	protected explicit_type "int"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "Amount of data in bytes a stream is allowed to dequeue before next
queue gets a turn. Defaults to one MTU-sized packet. Do not set this parameter below the MTU!
"
      end
    end

    class 130535 "QueueDiscipline::PFIFO_FAST"cpp_decl ""
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 128990 // <generalisation>
	relation 128734 ---|>
	  a public
	    classrelation_ref 128990 // <generalisation>
	  b parent class_ref 128478 // QueueDiscipline::Abstract
      end

      attribute 128478 "priomap"
	protected explicit_type "Hash"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "A hash which maps via TOS every packet to a band"
      end

      attribute 128606 "txQueueLength"
	protected explicit_type "int"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "Queue length"
      end
    end

    class 130791 "QueueDiscipline::HTB"cpp_decl ""
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Hierarchical Token Bucket"
      attribute 128743 "defaultClass"
	protected explicit_type "string"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "Send to this class unclassified traffic with minor identifier.

Only available for qdisc root. A default traffic can go to a fifo queue which will pass packets at full speed. This class should have a minimal bandwidth"
      end

      attribute 128871 "prio"
	protected explicit_type "int"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "Priority value (Round Robin fashion). Lower priority attends first."
      end

      attribute 129255 "rate"
	protected explicit_type "int"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "Maximum rate this class and its children are guaranteed
-> Kilobytes per second"
      end

      attribute 129383 "ceil"
	protected explicit_type "int"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "Maximum rate a class can send. 
ceil >= rate
ceil >= sum(ceil(children))"
      end

      classrelation 129374 // <generalisation>
	relation 129118 ---|>
	  a public
	    classrelation_ref 129374 // <generalisation>
	  b parent class_ref 128478 // QueueDiscipline::Abstract
      end

      attribute 128094 "burst"
	protected explicit_type "int"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "Amount of bytes can be burst at ceil speed"
      end

      attribute 128222 "cburst"
	protected explicit_type "int"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "Amount of bytes can be burst at infinite speed"
      end

      attribute 128136 "r2q"
	protected explicit_type "int"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "This allows you to set coefficient for computing DRR (Deficit
Round Robin) quanta. The default value of 10 is good for rates
from 5-500kbps and should be increased for higher rates.

Only available for root qdisc.
"
      end
    end

    class 130919 "QueueDiscipline::HFSC"cpp_decl ""
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 129246 // <generalisation>
	relation 128990 ---|>
	  a public
	    classrelation_ref 129246 // <generalisation>
	  b parent class_ref 128478 // QueueDiscipline::Abstract
      end

      attribute 128990 "defaultClass"
	protected explicit_type "string"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "Send to this class unclassified traffic with minor identifier.

Only available for qdisc root"
      end

      attribute 129118 "type"
	protected explicit_type "string"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "An enumeration type. Values possible:
* sc: Service curve
* rt: Real-time curve
* ls: Link sharing curve
* ul: Upper limit service rendered to each class defined"
      end

      attribute 129246 "rate"
	protected explicit_type "int"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "Guaranteed transmission rate in Bytes per second"
      end

      attribute 129374 "umax"
	protected explicit_type "int"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "Certain maximum transmission rate in Bytes per second"
      end

      attribute 129502 "dmax"
	protected explicit_type "int"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "A maximum delay in milliseconds"
      end
    end

    class 128094 "TreeBuilder::Abstract"
      abstract 
      cpp_decl ""
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "AbstractTreeBuilder is an abstract class.  It is an abstract interface to create parts of a tree of qdisc and classes for traffic control. It is using a Builder design pattern."
      classrelation 128222 // <aggregation>
	relation_ref 128094 // <aggregation>
      end

      classrelation 128606 // (components)
	relation 128350 ---> name "components"
	  stereotype "list"
	  a role_name "" multiplicity "" package
	    classrelation_ref 128606 // (components)
	  b parent class_ref 128999 // Node
      end

      attribute 128857 "interface"
	protected explicit_type "string"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "Attached interface to the tree"
      end

      operation 128089 "buildRoot"
	public return_type class_ref 128999 // Node
	nparams 2
	  param in name "defaultClass" explicit_type "string"
	  param out name "tree" type class_ref 128999 // Node
	
	
	
      end

      operation 128578 "dumpTcCommands"
	public explicit_return_type ""
	nparams 1
	  param out name "tcCommands" explicit_type "array ref"
	
	
	
	comment "Dump from the tree all tc commands without the path from the built tree"
      end

      operation 129000 "dumpIptablesCommands"
	public explicit_return_type "array ref"
	nparams 0
	
	
	
	comment "Dump from the tree all iptables commands without the path from the built tree.

It returns an array ref which each element contains iptables arguments"
      end

      operation 129128 "getInterface"
	public explicit_return_type "string"
	nparams 0
	
	
	
	comment "Accessor to the interface attached to the builder"
      end
    end

    class 128222 "TreeBuilder::HTB"cpp_decl ""
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "It encapsulates all HTB logic. It acts a concrete builder in Builder pattern.

EBox::TrafficShaping::HTBTreeBuilder"
      classrelation 128734 // <generalisation>
	relation 128478 ---|>
	  a public
	    classrelation_ref 128734 // <generalisation>
	  b parent class_ref 128094 // TreeBuilder::Abstract
      end

      operation 129256 "new"
	public return_type class_ref 128222 // TreeBuilder::HTB
	nparams 2
	  param in name "interface" explicit_type "string"
	  param in name "trafficShaping" type class_ref 128231 // TrafficShaping
	
	
	
	comment "Constructor for HTBTreeBuilder class. It encapsulates all HTB logic. It acts a concrete builder in Builder pattern."
      end

      operation 129384 "buildRoot"
	public return_type class_ref 128999 // Node
	nparams 2
	  param in name "defaultClass" explicit_type "string"
	  param in name "rate" explicit_type "int"
	
	
	
      end

      operation 129512 "buildRule"
	public explicit_return_type "Hash ref"
	nparams 6
	  param in name "protocol" explicit_type "string"
	  param in name "port" explicit_type "int"
	  param in name "guaranteedRate" explicit_type "int"
	  param in name "limitedRate" explicit_type "int"
	  param in name "priority" explicit_type "int"
	  param inout name "" explicit_type ""
	
	
	
	comment "Add a new rule to the tc tree.

It returns a hash reference which is the built class identifier to manage the
new rule, useful to destroy rules"
      end

      operation 129640 "destroyRule"
	public explicit_return_type ""
	nparams 1
	  param in name "leafClassId" explicit_type "Hash ref"
	
	
	
	comment "Remove a rule from the tc tree. 

leafClassId is the leaf class identifier which represents the rule internally which is destroyed"
      end
    end

    class 128350 "TreeBuilder::HFSC"cpp_decl ""
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 128862 // <generalisation>
	relation 128606 ---|>
	  a public
	    classrelation_ref 128862 // <generalisation>
	  b parent class_ref 128094 // TreeBuilder::Abstract
      end
    end

    class 128478 "QueueDiscipline::Abstract"
      abstract 
      cpp_decl ""
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 131688 "dumpTcAttr"
	public explicit_return_type "string"
	nparams 0
	
	
	
	comment "Dump the options needed to pass the tc command"
      end
    end

    class 128606 "QueueDiscipline::FIFO"cpp_decl ""
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 129758 // <generalisation>
	relation 129502 ---|>
	  a public
	    classrelation_ref 129758 // <generalisation>
	  b parent class_ref 128478 // QueueDiscipline::Abstract
      end

      attribute 128734 "queueSize"
	protected explicit_type "int"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "Queue size. In bytes if it's a bfifo and in packets if it's a pfifo"
      end

      attribute 128862 "type"
	protected explicit_type "string"
	cpp_decl ""
	java_decl ""
	idl_decl ""
	comment "An enumeration type, values possible:
* pfifo
* bfifo"
      end
    end

    class 128734 "TreeBuilder::Default"cpp_decl ""
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Default classless builder with a qdisc root attached to a pfifo_fast qdisc with 3 bands.

EBox::TrafficShaping::DefaultTreeBuilder"
      classrelation 129886 // <generalisation>
	relation 129630 ---|>
	  a public
	    classrelation_ref 129886 // <generalisation>
	  b parent class_ref 128094 // TreeBuilder::Abstract
      end

      operation 129768 "new"
	public return_type class_ref 128734 // TreeBuilder::Default
	nparams 1
	  param in name "interface" explicit_type "string"
	
	
	
	comment "Constructor for DefaultTreeBuilder abstract class. Default classless builder with a qdisc root attached to a pfifo_fast qdisc with 3 bands."
      end
    end

    class 128089 "QDisc::Base"cpp_decl ""
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 128089 // <realization>
	relation 128089 -_-|>
	  a public
	    classrelation_ref 128089 // <realization>
	  b parent class_ref 128999 // Node
      end

      classrelation 128345 // <association>
	relation 128345 ----
	  a role_name "" multiplicity "*" protected
	    comment "All filters in HTB should be attached to the root qdisc"
	    classrelation_ref 128345 // <association>
	  b role_name "" multiplicity "" protected
	    classrelation_ref 129196 // <association>
      end

      operation 130536 "new"
	public return_type class_ref 128089 // QDisc::Base
	nparams 3
	  param in name "majorNumber" explicit_type "int"
	  param in name "filters_ref" explicit_type "array ref"
	    defaultvalue "undef"
	  param in name "realQDisc" type class_ref 128089 // QDisc::Base
	    defaultvalue "undef"
	
	
	
	comment "Constructor for QDisc class. A queue discipline which can contain 0 or more classes. It can a root qdisc as well."
      end

      operation 128450 "setParent"
	public explicit_return_type ""
	nparams 1
	  param in name "parent" explicit_type "Tree"
	
	
	
	comment "Set the parent class which contains the parent. RootQDisc throws an exception if this method is called"
      end

      operation 128322 "attachFilter"
	public explicit_return_type ""
	nparams 1
	  param in name "filter" type class_ref 129895 // Filter::Fw
	
	
	
      end

      classrelation 128428 // parent ()
	relation 128300 ---- name ""
	  a role_name "parent" multiplicity "1" protected
	    comment "RootQDisc does NOT have parent"
	    classrelation_ref 128428 // parent ()
	  b role_name "attachedQDisc" multiplicity "1" protected
	    classrelation_ref 129068 // 
      end

      classrelation 128940 // (contains)
	relation 128812 ---> name "contains"
	  a role_name "" multiplicity "0..1" protected
	    classrelation_ref 128940 // (contains)
	  b parent class_ref 129511 // Class
      end

      operation 130664 "deAttachFilter"
	public explicit_return_type ""
	nparams 1
	  param in name "filterId" explicit_type "string"
	
	
	
	comment "De-attach a filter to the queue discipline"
      end

      operation 130792 "getQueueDiscipline"
	public return_type class_ref 128478 // QueueDiscipline::Abstract
	nparams 0
	
	
	
	comment "Get the queue discipline attached to the qdisc"
      end
    end

    class 128217 "TC"cpp_decl ""
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A class which executes tc commands"
      operation 128066 "tc"
	public explicit_return_type "array ref"
	nparams 1
	  param in name "opts" explicit_type "string"
	
	
	
	comment "Execute tc command with options.
Returns: the output of iptables command in an array

"
      end

      operation 128194 "reset"
	public explicit_return_type ""
	nparams 1
	  param in name "interface" explicit_type "string"
	
	
	
	comment "Restore default values to Linux kernel to the given interface"
      end

      operation 128706 "execute"
	public explicit_return_type ""
	nparams 1
	  param in name "tcCommands_ref" explicit_type "array ref"
	
	
	
	comment "Execute a serie of tc commands"
      end
    end
  end
end
