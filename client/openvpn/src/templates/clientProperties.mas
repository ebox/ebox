<%args>
$nameEditable   => 0

</%args>
<%shared>
use EBox::Gettext;
use Perl6::Junction qw(any all);

our @clientPortion  = (
      [ name => 'service',           printableName => __('Active'), input => 'checkbox' ],
			
);
		 
      # server portion (if we support someday multiple servers the
      # protocol would be part of client portion
our @serverPortion = (
      [ name => 'serverAddr',            printableName => __("Server's address"),], 
      [ name => 'proto',             
	printableName => __("Server's protocol"), 
        input => 'select', 
	options => [
		    { value => 'tcp',
		      printableValue => 'TCP' },
		    { value => 'udp',
		      printableValue => 'UDP' },
		   ], 
       ],
      [ name => 'serverPort',            printableName => __("Server's Port"),],

      # certificates stuff      
      [ 
        name          => 'caCertificate',          
	input         => 'file',  
	printableName => __("CA's certificate"),
	help          => __('Certificate of the Certification Authority. Must be the same used by the server'),
      ],		      
      [ 
        name  => 'certificate',    
	input => 'file',        
	printableName => __("Client's certificate"),
	help => __('Certificate used by the client to identify itself. It must be signed by the Certification Authority'),
      ],		      
      [ 
        name  => 'certificateKey',     
	input => 'file',
	printableName =>      __("Client's private key"),
	help => __("Private key used to unlock the client's certificate"),
      ], 

      [ name => 'ripPasswd', 
	printableName => __("Server's tunnel password"), 
	input => 'text', 
	help => __("This password must be the same as  the one set in the server. Otherwise, the client would be unable to push routes to the server"),
      ],
     );

</%shared>


<%method tableElements>
<%init>
  my (%args) = @_;
  my %properties = exists $args{properties} ? %{ $args{properties}} : ();
  my $nameEditable = exists $args{nameEditable} ? $args{nameEditable} : 0;
  my %overridePrintableNames = exists $args{overridePrintableNames} ? 
    %{ $args{overridePrintableNames} } : 
      ();
  my $serverPortion = exists $args{serverPortion}  ? $args{serverPortion} : 1;
  my $clientPortion = exists $args{clientPortion}  ? $args{clientPortion} : 1;


  my @tableElements;

  if ($clientPortion) {
    if ($nameEditable) {
      push @tableElements, [  'name' => 'name', 'printableName' =>  __('Client name')  ];
    }

    push @tableElements, @clientPortion;
  }

  if ($serverPortion) {
    push @tableElements, @serverPortion;
  }

# set values if required..

my $anyUpload = any(qw(caCertificatePath certificatePath certificateKey)) ;

@tableElements = map  {
  my %element = @{ $_ };

  my $propierty = $element{name};

  if ($propierty eq $anyUpload) {
     delete $properties{$propierty};
  }

  if (exists $properties{$propierty}) {
    $element{value} =  $properties{$propierty};
  }


  if (exists $overridePrintableNames{$propierty}) {
    $element{printableName} = $overridePrintableNames{$propierty};
  }
   

  [ %element ]
} @tableElements;

return @tableElements;
</%init>


</%method>