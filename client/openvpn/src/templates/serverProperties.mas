<%args>
$nameEditable   => 0
%properties     => ()
@availableCertificates
$submitName
$submitValue
</%args>
<%init>
use EBox::Gettext;

my @certificateOptions = map { { value => $_ } } @availableCertificates; 
my $certificateInput =  [ 
			 name => 'certificate', 
			 printableName => __('Server certificate'), 
			 input => 'select', 
			 extraParams => [ options =>  \@certificateOptions , ], 
			];

my @tlsRemoteOptions = ( { value =>  0,printableValue => __('disabled'), } , @certificateOptions);
my $tlsRemoteInput = [
		      name => 'tlsRemote',
		      printableName => __('Client authentication by common name'),
		      input => 'select',
		      extraParams => [ options => \@tlsRemoteOptions ], 
		      warning        => __('Any common name with this value as prefix will also be authorized'),
		     ];

my @tableElements  = (
      [ name => 'service',           printableName => __('Active'), input => 'checkbox' ],
      [ name => 'port',              printableName => __('Port'),],
      [ name => 'subnet',            printableName => __('VPN subnet'),], 
      [ name => 'subnetNetmask',     printableName => __('VPN subnet netmask'),], 
      [ name => 'proto',             printableName => __('Protocol'), 
       input => 'select', extraParams => [ options => [
                                               { value => 'tcp',
					       printableValue => 'TCP' },
                                               { value => 'udp',
					       printableValue => 'UDP' },
                                         ], ], 
       ],					 
      $certificateInput,	
      $tlsRemoteInput,
      [ name => 'pullRoutes', printableName => __('Pull routes from
      eBox clients'), input => 'checkbox', help => __("If you want to create a tunnel between two eBoxyou will need this option. Don't forget to advertise routes to the cliebt")],
		      
      [ name => 'clientToClient',    printableName => __('Allow client-to-client connections'), input => 'checkbox' ], 
      [ name => 'local',             printableName => __('Local address to listen on'), 
      help => __("If not local address to listen on is provided, the server will
listen in all local addresses"),
      ],
     );
if ($nameEditable) {
   unshift @tableElements, [ name => 'name', printableName =>    __('Server name') ];
}
# set values if required..



@tableElements = map  {
  my %element = @{ $_ };

  my $propierty = $element{name};
  if (exists $properties{$propierty}) {
    $element{value} =  $properties{$propierty};
  }
   

  [ %element ]
} @tableElements;



push @tableElements, [ name => $submitName, value => $submitValue, input => 'submit' ];

</%init>
<& /formTable.mas, rows => \@tableElements &>
