#!/usr/bin/perl

use Net::Jabber;

my ($TLS) = @ARGV;

unless (defined $TLS) {
    $TLS = 0;
}

my $receiver = new Net::Jabber::Client(debuglevel=> 1,
                                   debugfile => 'stdout',
                                   debugtime => 1);

$receiver->SetCallBacks(
    message => sub {
        my $msg = $_[1];

        my $body = $msg->GetBody();

        print "Message received: $body\n";

        if ($body eq 'foo') {
            $receiver->Disconnect();

            exit 0;
        }
    }
);

print "Connecting bar...\n";

my $status = $receiver->Connect(hostname => 'ebox-server', 
                                tls => $TLS, 
                                port => $TLS ? 5223 : 5222);

if (not defined $status) {
    print "Jabber server is down or connection is not allowed\n";
    exit 1;
}

$receiver->AuthSend(
               username => 'bar',
               password => 'bar',
               resource => 'bar');

$receiver->PresenceSend();

my $sender = new Net::Jabber::Client(debuglevel=> 1,
                                   debugfile => 'stdout',
                                   debugtime => 1);

print "Connecting foo...\n";

my $status = $sender->Connect(hostname => 'ebox-server', 
                              tls => $TLS,
                              port => $TLS ? 5223 : 5222);

my @result = $sender->AuthSend(
               username => 'foo',
               password => 'foo',
               resource => 'foo');


if (defined $result[0] && $result[o] eq 'ok') {
    print "Authentication OK\n";

    my $msg = new Net::Jabber::Message();
    $msg->SetMessage(to => 'bar@ebox-server',
                     type => 'chat',
                     body => 'foo');
    $sender->Send($msg);                     

    $sender->Disconnect();
}
else {
    print "Authentication failed\n";
}

$receiver->Process(10);

exit 1;

