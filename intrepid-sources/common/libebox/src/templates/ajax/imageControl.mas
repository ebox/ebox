<%doc>

</%doc>
<%flags>
  inherit => '/ajax/form.mas'
</%flags>
<%args>
  $model
  $hasChanged
  $action => 'view'
</%args>
<%init>
  use EBox::Gettext;
</%init>
<& PARENT:view,
   model => $model,
   hasChanged => $hasChanged,
   action     => $action,
&>



<%doc>
  Method: buttons

     Show the button to submit the form

  Overrides:

     /ajax/modelViewer.mas:buttons

</%doc>
<%method buttons>
<%init>
  # Getting the arguments from the first request
  my $model = $m->caller_args(2)->{model};
  # getting the list model in which apply the changes

</%init>
<td id="<% 'buttons_' . $model->modelName() %>" >
  <& /input/submit.mas,
     name => 'change',
     value => __('Change'),
     onclick => $model->changeRowJS(0, 0),
  &>
</td>
</%method>


<%method headerScriptSection>

<& PARENT:headerScriptSection &>

<script type='text/javascript'>
function applyChangeToImage(url, table, fields, directory, force)
{
	var pars = 'action=edit&tablename=' + table + '&directory='
                   + directory ;



        // If force parameter is ready, show it
        if ( force ) {
          pars += '&force=1';
        }

//	cleanError(table);
	
	for (var i = 0; i < fields.length; i++) {
		var field = fields[i];
		var value = inputValue(table + '_' + field);
		if (value) {
			if (pars.length != 0) {
				pars += '&';
			}
			pars += field + '=' + value;
		}
	}

	var MyAjax = new Ajax.Updater(
		{
			success: table,
			failure: 'error_' + table 
		},
		url,
		{
			method: 'post',
			parameters: pars,
			asyncrhonous: false,
			evalScripts: true,

		});



}

</script>



</%method>

