#!/usr/bin/perl
use strict;
use warnings;

use IO::Socket;
use constant CENSORD_SOCKET => "/tmp/.censord.sock";

use File::Slurp;

sub parse_packet
{
    my ($data) = @_;

    my $regex = 'imspector-(incoming|outcoming)\n' .
                'client (.*?)\n' .
                'protocol (.*?)\n' .
                'localid (.*?)\n' .
                'remoteid (.*?)\n' .
                'charset (.*?)\n' .
                'length (.*?)\n' .
                '\n' .
                '(.*)';

    $data =~ m/$regex/s;

    my $info = {};
    $info->{'type'} = $1;
    $info->{'client'} = $2;
    $info->{'protocol'} = $3;
    $info->{'localid'} = $4;
    $info->{'remoteid'} = $5;
    $info->{'length'} = $7;
    $info->{'content'} = $8;
    return $info;
}

unlink CENSORD_SOCKET;
my $server = IO::Socket::UNIX->new(Local => CENSORD_SOCKET,
                                   Type  => SOCK_STREAM,
                                   Listen => 5)
    or die $@;

my $client;

while ($client = $server->accept()) {
    my $data = read_file($client);
    my $info = parse_packet($data);
    use Data::Dumper;
    print Dumper($info);
    close($data);
}

close($server);
