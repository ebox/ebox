Bug and feature tracking has been moved to the trac web site.

Done
----
	- Make the menu dinamic, using EBox::Global.
	- Implement common API in squid (regenConfig, usesObject...)
	- Implement missing functionality in firewall.
	- Implement common API in firewall (regenConfig, usesObject...)
	- Provide a way to set up a transparent proxy:  added dnat option for
	  services.
	- Add "Finnish" button in all pages, to restart reconfigured services
	  and their dependencies. Implement this functionality in Module.pm or
	  Global.pm.
	- Use common code to execute stuff as root.
	- Error handling: throw exceptions in the modules, catch them and show
	  them in the cgis.
	- Remove leading and trailing characters from cgi params
	- Use mod_perl to speed up the response time on slow machines
	- admin validation
	- http session using Apache::AuthCookie
	- move ldap module to it's own source tree (like squid)
	- make all cgis use _requireParam everywhere it makes sense to do so
	- write init.d script that starts/stops all ebox services
	- change cgis that use the value of the input button to make a decision.
	  they should use the name.
	- logout menu entry should open a logout page where the user is warned
	  that logging out will discard his changes, and where a logout button
	  is provided. The logout menu entry should be at the bottom of the
	  menu, with the save/cancel entry.
	- General configuration dialog:
		- language selection
		- change admin password
	- Change ACLs name: Objects
	- Improve address input: user friendly netmask input in Objects module
	- implement _regenConfig in network module
	- unset the external interface if the selected one becomes
	  not-configured
	- In the GUI: warn the user if he tries to delete an object which is
	  being used by a module, make him confirm that he wants to delete it.
	- do not show the object drop-down if there are none
	- Improve address input: user friendly netmask input in network
	  interfaces 
	- Improve address input: user friendly netmask input in static routes
	- squid: create output rules in the firewall, squid won't be able to
	  fetch pages if that isn't done
	- tell the firewall to allow the squid service for the objects that are
	  allowed to use squid in the squid gui.
	- implement ordering in firewall rules for an object
	- implement ordering in static routes
	- allow an unlimited number of external interfaces
	- allow redirections on all directions
	- do some (configurable) logging: requests, errors, stack traces,
	  service restarts...
