# Generated by eBox
<%args>
        $ldapport

        $relay
        $relayAuth 

        $allowed
        $maxmsgsize
        $aliasDN
        $vmaildir
        $usersDN
        $uidvmail
        $gidvmail
        $sasl
        $smtptls
        $ldap
        $filter
        $ipfilter
        $portfilter

        $bccMaps

        $greylist
        $greylistAddr 
        $greylistPort 
</%args>
<%init>
use EBox::Gettext;

my $smtpRecipientRestrictions ;
$smtpRecipientRestrictions .= 'reject_non_fqdn_sender, ';  
$smtpRecipientRestrictions .= 'reject_unknown_sender_domain, '; 
$smtpRecipientRestrictions .= 'reject_non_fqdn_recipient, ';
$smtpRecipientRestrictions .=  'reject_unknown_recipient_domain, ';

if ($sasl) {
    $smtpRecipientRestrictions = 'permit_sasl_authenticated, ';
}
$smtpRecipientRestrictions .=  'permit_mynetworks, ';

$smtpRecipientRestrictions .= 'reject_unauth_destination';
# at his point all mail for whom the server isn't the final point or the
# forwarder has been rejected so the next restrictions only applies in this two cases


$smtpRecipientRestrictions .= ', reject_invalid_helo_hostname';
$smtpRecipientRestrictions .= ', reject_non_fqdn_helo_hostname';
$smtpRecipientRestrictions .= ', check_helo_access pcre:/etc/postfix/helo_checks.pcre';

if ($greylist) {
    my $greylistRecipientRestriction = "check_policy_service inet:" . 
                                        $greylistAddr . ':' . 
                                        $greylistPort ;
    $smtpRecipientRestrictions .= ", $greylistRecipientRestriction";
}


my $certFile = '/etc/postfix/sasl/postfix.pem';
my $keyFile  = '/etc/postfix/sasl/postfix.pem';
</%init>

# require helo
smtpd_delay_reject  = yes 
smtpd_helo_required = yes

strict_rfc821_envelopes = yes
disable_vrfy_command = yes

smtpd_banner = eBox ESMTP
biff = no

append_dot_mydomain = no


myorigin = /etc/mailname
alias_maps = hash:/etc/aliases

alias_database = hash:/etc/aliases
local_recipient_maps = proxy:unix:passwd.byname $alias_maps

relayhost = <% $relay %>

% if ($relay) {
smtp_tls_security_level = may
smtp_tls_key_file  = <% $keyFile  %>
smtp_tls_cert_file = <% $certFile %> 
% }

% if ($relayAuth) {
smtp_sasl_auth_enable = yes
smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd
smtp_sasl_security_options = noanonymous

% }

mynetworks = <% $allowed %>

message_size_limit = <% $maxmsgsize %>
mailbox_size_limit = 0
virtual_mailbox_limit = 0
recipient_delimiter = +
inet_interfaces = all

# Virtual Aliases
virtual_alias_maps = ldap:valiases
valiases_server_host = 127.0.0.1
valiases_search_base = <% $aliasDN %>
valiases_query_filter = (&(mail=%s)(objectClass=CourierMailAlias))
valiases_result_attribute = maildrop
aliases_bind = no

# Virtual Domains
dovecot_destination_recipient_limit = 1
virtual_transport = dovecot
#virtual_transport = virtual
virtual_mailbox_base = <% $vmaildir %>
virtual_mailbox_maps= ldap:ldapvirtualmap

ldapvirtualmap_server_host = 127.0.0.1:<% $ldapport %>
ldapvirtualmap_bind = no
ldapvirtualmap_search_base = <% $usersDN %>
ldapvirtualmap_query_filter = (&(mail=%s)(!(quota=-1))(objectClass=CourierMailAccount))
ldapvirtualmap_result_attribute = mailbox

virtual_mailbox_domains = ldap:vmaildomains
vmaildomains_server_host = 127.0.0.1
vmaildomains_bind = no
vmaildomains_search_base =  ou=postfix,<% $ldap->{'dn'} %>
vmaildomains_query_filter = (|(&(objectclass=domain)(domainComponent=%s))(&(objectclass=CourierMailAlias)(mail=@%s)))
vmaildomains_result_attribute = dc, maildrop


virtual_minimum_uid = 100
virtual_uid_maps = static:<% $uidvmail %>
virtual_gid_maps = static:<% $gidvmail %>


% if (($smtptls) or ($sasl)){
## TLS/SSL
smtpd_use_tls = yes
smtpd_tls_note_starttls = yes
smtpd_tls_key_file  = <% $keyFile  %>
smtpd_tls_cert_file = <% $certFile %>
smtpd_tls_loglevel = 1
% }


smtpd_recipient_restrictions = <% $smtpRecipientRestrictions %>


% if ($sasl) {
#SASL authentication
smtpd_sasl_auth_enable = yes
smtpd_sasl_security_options = noanonymous
smtpd_sasl_local_domain =
broken_sasl_auth_clients = yes
smtpd_tls_auth_only = yes
smtpd_sasl_type = dovecot
smtpd_sasl_path = private/auth
smtpd_sasl_local_domain =  $myhostname 
% }

% if ($filter) {
content_filter=smtp-amavis:<% $ipfilter %>:<% $portfilter %>
% }

% if ($bccMaps) {
sender_bcc_maps = <% $bccMaps %>
recipient_bcc_maps = <% $bccMaps %>
% }

